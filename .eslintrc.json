{
	"env": {
		"browser": true,
		"es6": true,
		"es2017": true
	},
	"extends": [
		"eslint:recommended",
		"plugin:react/recommended",
		"plugin:promise/recommended",
		"plugin:sonarjs/recommended",
		"plugin:@typescript-eslint/eslint-recommended",
		"plugin:@typescript-eslint/recommended",
		"plugin:@typescript-eslint/recommended-requiring-type-checking"
	],
	"settings": {
		"react": {
			"createClass": "createReactClass",
			"pragma": "React",
			"version": "detect",
			"flowVersion": "0.53"
		}
	},
	"parser": "@typescript-eslint/parser",
	"parserOptions": {
		"project": "tsconfig.json",
		"tsconfigRootDir": "./"
	},
	"plugins": [
		"react",
		"react-hooks",
		"promise",
		"optimize-regex",
		"sonarjs",
		"@typescript-eslint"
	],
	"overrides": [
		{
			"files": [
				"src/apps/examples/**"
			],
			"rules": {
				"no-alert": "off"
			}
		}
	],
	"rules": {
		"no-shadow": "off",
		"no-extra-parens": "off",
		"no-template-curly-in-string": "error",
		"block-scoped-var": "error",
		"curly": [
			"error",
			"all"
		],
		"eqeqeq": "error",
		"max-classes-per-file": [
			"error",
			1
		],
		"no-alert": "warn",
		"no-else-return": [
			"error",
			{
				"allowElseIf": false
			}
		],
		"no-mixed-spaces-and-tabs": [
			"error",
			"smart-tabs"
		],
		"no-implicit-coercion": "error",
		"no-labels": "error",
		"no-lone-blocks": "error",
		"no-multi-spaces": "error",
		"no-new": "error",
		"no-new-func": "error",
		"no-new-wrappers": "error",
		"no-return-await": "error",
		"no-self-compare": "error",
		"no-sequences": "error",
		"no-throw-literal": "error",
		"no-unused-expressions": "error",
		"no-useless-call": "error",
		"no-useless-concat": "error",
		"no-useless-return": "error",
		"prefer-promise-reject-errors": "error",
		"radix": "error",
		"no-undefined": "error",
		"semi": "off",
		"@typescript-eslint/semi": [
			"error"
		],
		"array-bracket-newline": [
			"error",
			{
				"multiline": true
			}
		],
		"comma-dangle": "off",
		"comma-style": "error",
		"eol-last": "error",
		"key-spacing": "error",
		"keyword-spacing": "error",
		"new-parens": "error",
		"no-bitwise": "warn",
		"no-lonely-if": "warn",
		"no-multiple-empty-lines": "error",
		"no-nested-ternary": "error",
		"no-new-object": "error",
		"no-tabs": "off",
		"no-trailing-spaces": "error",
		"no-unneeded-ternary": "error",
		"no-whitespace-before-property": "error",
		"object-curly-newline": "error",
		"semi-spacing": "error",
		"space-before-blocks": "error",
		"space-before-function-paren": [
			"error",
			{
				"anonymous": "always",
				"named": "never",
				"asyncArrow": "always"
			}
		],
		"space-in-parens": "error",
		"space-infix-ops": "error",
		"space-unary-ops": "error",
		"spaced-comment": "off",
		"switch-colon-spacing": "error",
		"arrow-body-style": "off",
		"arrow-parens": "off",
		"arrow-spacing": "error",
		"generator-star-spacing": [
			"error",
			"after"
		],
		"no-confusing-arrow": "error",
		"no-useless-computed-key": "error",
		"no-useless-rename": "error",
		"object-shorthand": [
			"error",
			"always"
		],
		"prefer-arrow-callback": "warn",
		"rest-spread-spacing": [
			"error",
			"never"
		],
		"sort-imports": "off",
		"template-curly-spacing": "error",
		"promise/prefer-await-to-then": "off",
		"optimize-regex/optimize-regex": "warn",
		"@typescript-eslint/no-extra-parens": [
			"error",
			"all",
			{
				"nestedBinaryExpressions": false,
				"ignoreJSX": "multi-line"
			}
		],
		"@typescript-eslint/no-shadow": [
			"error",
			{
				"builtinGlobals": false
			}
		],
		"@typescript-eslint/member-ordering": "warn",
		"@typescript-eslint/no-magic-numbers": "off",
		"@typescript-eslint/brace-style": [
			"error",
			"1tbs"
		],
		"@typescript-eslint/indent": "off",
		"@typescript-eslint/quotes": [
			"error",
			"single",
			{
				"avoidEscape": true
			}
		],
		"@typescript-eslint/func-call-spacing": [
			"error",
			"never"
		],
		"@typescript-eslint/no-useless-constructor": "error",
		"@typescript-eslint/prefer-for-of": "warn",
		"@typescript-eslint/no-parameter-properties": "off",
		"@typescript-eslint/no-unnecessary-type-arguments": "warn",
		"@typescript-eslint/prefer-function-type": "warn",
		"@typescript-eslint/prefer-readonly": "warn",
		"@typescript-eslint/no-explicit-any": "off",
		"@typescript-eslint/camelcase": "off",
		"@typescript-eslint/no-unsafe-assignment": "off",
		"@typescript-eslint/no-unsafe-call": "off",
		"@typescript-eslint/no-unsafe-return": "off",
		"@typescript-eslint/no-var-requires": "off",
		"@typescript-eslint/explicit-module-boundary-types": "off",
		"@typescript-eslint/restrict-template-expressions": "off",
		"@typescript-eslint/explicit-function-return-type": [
			"error",
			{
				"allowExpressions": true
			}
		],
		"@typescript-eslint/interface-name-prefix": "off",
		"@typescript-eslint/no-unused-vars": [
			"error",
			{
				"argsIgnorePattern": "^_",
				"varsIgnorePattern": "^_$"
			}
		],
		"react/no-access-state-in-setstate": "error",
		"react/no-unescaped-entities": "off",
		"react/no-danger": "error",
		"react/no-multi-comp": "off",
		"react/no-this-in-sfc": "error",
		"react/prefer-stateless-function": "error",
		"react/jsx-filename-extension": [
			"error",
			{
				"extensions": [
					".tsx"
				]
			}
		],
		"react/jsx-no-bind": "error",
		"react/jsx-no-literals": "off",
		"react/jsx-no-useless-fragment": "error",
		"react/jsx-pascal-case": "error",
		"react-hooks/rules-of-hooks": "error",
		"react-hooks/exhaustive-deps": "warn",
		"react/display-name": "off",
		"sonarjs/cognitive-complexity": [
			"warn",
			40
		],
		"complexity": [
			"error",
			40
		],
		"max-len": [
			"error",
			180
		]
	}
}
